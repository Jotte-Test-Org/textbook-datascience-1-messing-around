from pathlib import Path

# --- Directories ---
chapter_dir = Path("textbook-datascience-1/textbook/")
output_term = chapter_dir / "glossary.md"
output_code = chapter_dir / "code-glossary.md"

# --- Helper function ---
def parse_entries(file_list):
    entries = []
    for file in sorted(file_list):
        lines = file.read_text().splitlines()
        current = []
        for line in lines:
            if line.startswith("## "):
                if current:
                    entries.append(current)
                current = [line]
            else:
                current.append(line)
        if current:
            entries.append(current)
    return sorted(entries, key=lambda e: e[0].lower())

# --- Collect and sort entries ---
term_files = chapter_dir.rglob("*-glossary.md")
code_files = chapter_dir.rglob("*-code-glossary.md")

term_entries = parse_entries(term_files)
code_entries = parse_entries(code_files)

# --- Write glossary.md ---
with output_term.open("w") as f:
    f.write("# Glossary\n\n")
    f.write("<!-- AUTO-GENERATED: Do not edit this file directly -->\n\n")
    for entry in term_entries:
        f.write("\n".join(entry).strip() + "\n\n")

# --- Write code-glossary.md ---
with output_code.open("w") as f:
    f.write("# Code Glossary\n\n")
    f.write("<!-- AUTO-GENERATED: Do not edit this file directly -->\n\n")
    for entry in code_entries:
        f.write("\n".join(entry).strip() + "\n\n")
